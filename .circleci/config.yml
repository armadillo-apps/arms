version: 2
jobs:
  build:
    docker:
      - image: circleci/node:12.6.0-browsers

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: run the build
          command: npm run build
  unitTest:
    docker:
      - image: circleci/node:12.6.0-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Run eslint
          command: npm run lint
      - run:
          name: Run unit tests
          command: npm run test:coverage
  dropDb:
    docker:
      - image: circleci/mongo:3.6.12
    steps:
      - run:
          name: Drop test database
          command: mongo $HEROKU_TEST_DB -u $HEROKU_TEST_DB_USER -p $HEROKU_TEST_DB_PASSWORD --eval "db.dropDatabase()"
  seedData:
    docker:
      - image: cypress/base:10
    steps:
      - run:
          name: Pull backend
          command: git clone https://github.com/armadillo-apps/legs.git && cd legs
      - run:
          name: Install dependencies and apply pending migrations
          command: npm install && npm run mongo:migrate up
  uiTest:
    docker:
      - image: cypress/base:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm ci
      - run:
          name: Verify Cypress
          command: npm run cy:verify
      - save_cache:
          key: cache-{{ checksum "package.json" }}
          paths:
            - ~/.npm
            - ~/.cache
      - run:
          name: Run Cypress E2E tests
          command: npm run cy:run
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots
  deployTest:
    docker:
      - image: circleci/node:12.6.0
    environment:
      HEROKU_APP_NAME: test-armadillo-arms
    steps:
      - checkout
      - run:
          name: Deploy to test frontend on Heroku
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
  deployDemo:
    docker:
      - image: circleci/node:12.6.0
    environment:
      HEROKU_APP_NAME: demo-armadillo-arms
    steps:
      - checkout
      - run:
          name: Deploy to demo frontend on Heroku
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
  deployProd:
    docker:
      - image: circleci/node:12.6.0
    environment:
      HEROKU_APP_NAME: armadillo-arms
    steps:
      - checkout
      - run:
          name: Deploy to production frontend on Heroku
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
      - run:
          name: Ping test deployment
          command: curl --fail https://$HEROKU_APP_NAME.herokuapp.com/
  pingAllDeploymentServers:
    docker:
      - image: circleci/node:12.6.0-browsers
    steps:
      - run:
          name: Ping arms test server
          command: curl --silent https://test-armadillo-arms.herokuapp.com/
      - run:
          name: Ping legs test server
          command: curl --silent https://test-armadillo-legs.herokuapp.com/
      - run:
          name: Ping arms demo server
          command: curl --silent https://demo-armadillo-arms.herokuapp.com/
      - run:
          name: Ping legs demo server
          command: curl --silent https://demo-armadillo-legs.herokuapp.com/
      - run:
          name: Ping arms production server
          command: curl --silent https://armadillo-arms.herokuapp.com/
      - run:
          name: Ping legs production server
          command: curl --silent https://armadillo-legs.herokuapp.com/

workflows:
  version: 2
  testAndDeploy:
    jobs:
      - dropDb
      - seedData:
          requires:
            - dropDb
      - uiTest:
          requires:
            - seedData
      - deployDemo:
          requires:
            - uiTest
      - deployProd:
          requires:
            - deployDemo
